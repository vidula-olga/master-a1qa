package pen4unit;

import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

/**
 * Created by New User on 02.11.2018.
 */
public class PenTest {

    @Rule
    public ExpectedException thrown= ExpectedException.none();

    @Test
    public void testNoWorkIfNoInk() {
        Pen pen = new Pen(0);
        Assert.assertEquals(pen.isWork(), Boolean.FALSE);
    }

    @Test
    public void testWorkIfHaveInk() {
        Pen pen = new Pen(5);
        Assert.assertEquals(pen.isWork(), Boolean.TRUE);
    }

    @Test
    public void testWriteFullWord() {
        Pen pen = new Pen(5, 1);
        Assert.assertEquals(pen.write("test"), "test");
    }

    @Test
    public void testWritePartOfWord() {
        Pen pen = new Pen(3, 1);
        Assert.assertEquals(pen.write("test"), "tes");
    }

    @Test
    public void testWriteNoWord() {
        Pen pen = new Pen(0, 1);
        Assert.assertEquals(pen.write("test"), "");
    }

    @Test
    public void testWriteNullWord() {
        Pen pen = new Pen(1, 1);
        thrown.expect(NullPointerException.class);
        pen.write(null);
    }


    @Test
    public void testWriteWordIFLetterSize() {
        Pen pen = new Pen(8, 2);
        Assert.assertEquals(pen.write("test"), "test");
    }

    @Test
    public void testWriteWordIfSizeIsNotDevide() {
        Pen pen = new Pen(7, 2);
        Assert.assertEquals(pen.write("test"), "tes");
    }

    @Test
    public void testColor() {
        Pen pen = new Pen(8, 2, "BLUE");
        Assert.assertEquals(pen.getColor(), "BLUE");
    }

    @Test
    public void testOtherColor() {
        Pen pen = new Pen(8, 2, "RED");
        String color = pen.getColor();
        Assert.assertEquals(color, "RED");
    }

    @Test
    public void testDoSomethingDefaulColor() {
        final ByteArrayOutputStream myOut = new ByteArrayOutputStream();
        System.setOut(new PrintStream(myOut));

        Pen pen = new Pen(8, 2);
        pen.doSomethingElse();

        final String standardOutput = myOut.toString();
        Assert.assertEquals("BLUE\n", standardOutput);
    }

    @Test
    public void testDoSomethingRedColor() {
        final ByteArrayOutputStream myOut = new ByteArrayOutputStream();
        System.setOut(new PrintStream(myOut));

        Pen pen = new Pen(8, 2, "RED");
        pen.doSomethingElse();

        final String standardOutput = myOut.toString();
        Assert.assertEquals(standardOutput, "RED" + System.lineSeparator());
    }
}
